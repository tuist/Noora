name: Release Web

on:
  push:
    branches:
      - main
    paths:
      - "web/**"
      - ".github/workflows/release-web.yml"
  workflow_dispatch:
    inputs:
      version:
        description: "The version to release"
        type: string

permissions:
  contents: write
  pull-requests: read
  statuses: write
  packages: write

jobs:
  release-web:
    name: Release Web
    runs-on: "ubuntu-latest"
    timeout-minutes: 15
    if: "!startsWith(github.event.head_commit.message, '[Release]')"
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0
      - uses: jdx/mise-action@v2
        with:
          experimental: true
      - name: Build assets
        run: |
          pnpm -C web run build
      - name: Check for Web changes since last release
        id: check-changes
        run: |
          # Check if there are any commits affecting the Web package since the last Web release
          LAST_WEB_TAG=$(git tag -l "web-*" --sort=-version:refname | head -n 1)
          if [ -z "$LAST_WEB_TAG" ]; then
            echo "No previous Web releases found, will release"
            echo "has-changes=true" >> $GITHUB_OUTPUT
          else
            if git diff --name-only ${LAST_WEB_TAG}..HEAD | grep -E '^web/' > /dev/null; then
              echo "Web changes found since $LAST_WEB_TAG"
              echo "has-changes=true" >> $GITHUB_OUTPUT
            else
              echo "No Web changes since $LAST_WEB_TAG"
              echo "has-changes=false" >> $GITHUB_OUTPUT
            fi
          fi
      - name: Get next version
        id: next-version
        if: steps.check-changes.outputs.has-changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NEXT_VERSION=$(git cliff --config web/cliff.toml --include-path "web/**" --bumped-version)
          echo "NEXT_VERSION=$NEXT_VERSION" >> "$GITHUB_OUTPUT"
          echo "Next Web version will be: $NEXT_VERSION"
      - name: Update version in mix.exs
        if: steps.check-changes.outputs.has-changes == 'true'
        run: |
          VERSION="${{ steps.next-version.outputs.NEXT_VERSION }}"
          # Remove the "web-" prefix from the version
          VERSION="${VERSION#web-}"
          sed -i 's/version: "[^"]*"/version: "'$VERSION'"/' web/mix.exs
      - name: Update CHANGELOG.md
        if: steps.check-changes.outputs.has-changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: git cliff --config web/cliff.toml --include-path "web/**" --bump -o web/CHANGELOG.md
      - name: Get release notes
        id: release-notes
        if: steps.check-changes.outputs.has-changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "RELEASE_NOTES<<EOF" >> "$GITHUB_OUTPUT"
          git cliff --config web/cliff.toml --include-path "web/**" --latest >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
      - name: Update Storybook dependency
        if: steps.check-changes.outputs.has-changes == 'true'
        run: |
          VERSION="${{ steps.next-version.outputs.NEXT_VERSION }}"
          # Remove the "web-" prefix from the version
          VERSION="${VERSION#web-}"
          sed -i 's/{:noora, "== [^"]*"}/{:noora, "== '$VERSION'"}/' storybook/mix.exs
          cd storybook && mix deps.get
      - name: Commit changes
        id: auto-commit-action
        uses: stefanzweifel/git-auto-commit-action@v6
        if: steps.check-changes.outputs.has-changes == 'true'
        with:
          commit_options: "--allow-empty"
          tagging_message: ${{ steps.next-version.outputs.NEXT_VERSION }}
          skip_dirty_check: true
          commit_message: "[Release] Noora Web ${{ steps.next-version.outputs.NEXT_VERSION }}"
      - name: Publish to Hex
        if: steps.check-changes.outputs.has-changes == 'true'
        run: |
          cd web
          mix local.hex --force
          mix local.rebar --force
          mix hex.publish --yes
        env:
          HEX_API_KEY: ${{ secrets.HEX_API_KEY }}
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: steps.check-changes.outputs.has-changes == 'true'
        with:
          draft: false
          repository: tuist/Noora
          name: Web ${{ steps.next-version.outputs.NEXT_VERSION }}
          tag_name: ${{ steps.next-version.outputs.NEXT_VERSION }}
          body: ${{ steps.release-notes.outputs.RELEASE_NOTES }}
          target_commitish: ${{ steps.auto-commit-action.outputs.commit_hash }}
      - name: Deploy Storybook
        if: steps.check-changes.outputs.has-changes == 'true'
        working-directory: storybook
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
